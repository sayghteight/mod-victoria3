namespace = purge_your_vassal_migration

purge_your_vassal_migration.1 = {
	type = country_event
	placement = ROOT

	trigger = {
		exists = scope:target_country
	}

	title = purge_your_vassal_migration_events.1.t
	desc = purge_your_vassal_migration_events.1.d

	event_image = {
		video = "gfx/event_pictures/unspecific_signed_contract.bk2"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	on_opened_soundeffect = "event:/SFX/Events/unspecific/signed_contract"

	icon = "gfx/interface/icons/event_icons/event_default.dds"

	duration = 1

	immediate = {
	}
	option = {
		#  attract
		name = purge_your_vassal_migration_events.1.choose.1
		trigger = {
			NOT = {
				scope:target_country = {
					has_modifier = overlord_attract_pop
				}
			}
		}
		remove_modifier = purge_your_vassal
		scope:target_country = {
			if = {
				limit = {
					has_modifier = overlord_send_pop
				}
				remove_modifier = overlord_send_pop
			}
			add_modifier = overlord_attract_pop
		}
	}
	option = {
		#  send
		name = purge_your_vassal_migration_events.1.choose.2
		trigger = {
			NOT = {
				scope:target_country = {
					has_modifier = overlord_send_pop
				}
			}
		}
		remove_modifier = purge_your_vassal
		scope:target_country = {
			if = {
				limit = {
					has_modifier = overlord_attract_pop
				}
				remove_modifier = overlord_attract_pop
			}
			add_modifier = overlord_send_pop
		}
	}
	option = {
		# cancel
		name = purge_your_vassal_migration_events.1.choose.3
		trigger = {
			or = {
				scope:target_country = {
					has_modifier = overlord_attract_pop
				}
				scope:target_country = {
					has_modifier = overlord_send_pop
				}
			}
		}
		remove_modifier = purge_your_vassal
		scope:target_country = {
			if = {
				limit = {
					has_modifier = overlord_attract_pop
				}
				remove_modifier = overlord_attract_pop
			}
			if = {
				limit = {
					has_modifier = overlord_send_pop
				}
				remove_modifier = overlord_send_pop
			}
		}
	}
	option = {
		name = CANCEL
		default_option = yes
		remove_modifier = purge_your_vassal
	}
}